create database Цветочный_Салон
go

use Цветочный_Салон
go

create table Типы_Товаров
(
ID_Типа int primary key identity,
Наименование varchar(25) unique  not null
)
go


insert into Типы_Товаров(Наименование)
values	('Букеты'),
		('Цветы'),
		('Горшки'),
		('Комнатные растения'),
		('Садовые растения'),
		('Уход за растениями')
go

create table Товары
(
ID_Товара int primary key identity,
Наименование varchar(50) unique not null,
Тип_Товара int foreign key references Типы_Товаров(ID_Типа) not null,
Длина_см int not null,
Ширина_см int not null,
Высота_см int not null,
Описание varchar(255) not null,
Стоимость money not null
)
go

insert into Товары(Наименование, Тип_Товара, Длина_см, Ширина_см, Высота_см, Стоимость)
values	('Весеннее настроение','1','30','30','65','1670'),
		('Празничный','1','25','30','70','1940'),
		('Нежное прикосновение','1','40','40','76','2100'),
		('Букет Love','1','25','25','25','1000'),
		('Яркий Аквамарин','1','45','20','30','2000'),
		('Агава','2','14','7','68','100'),
		('Бегония','2','15','5','39','60'),
		('Роза','2','9','7','40','50'),
		('Орхидея','2','11','7','23','90'),
		('Амариллис','2','9','9','32','80'),
		('Маленький','3','8','8','12','100'),
		('Обычный','3','12','12','14','120'),
		('Средний','3','16','13','15','180'),
		('Большой','3','20','20','18','250'),
		('Огромный','3','25','25','27','350'),
		('Фикус бенгальский','4','10','10','20','560'),
		('Карисса','4','5','10','20','720'),
		('Плюмерия','4','7','12','14','480'),
		('Серисса','4','8','8','17','670'),
		('Санхеция','4','10','7','28','510'),
		('Альстромерия','5','6','5','20','700'),
		('Астры','5','5','4','15','1000'),
		('Бархатцы','5','3','3','10','1200'),
		('Гайлардия','5','8','9','18','970'),
		('Георгины','5','10','5','21','690'),
		('Удобрения','6','20','20','60','250'),
		('Лопатка','6','8','3','16','320'),
		('Пищевая пленка','6','300','20','20','120'),
		('Садовая лейка','6','50','30','25','500'),
		('Пуливизатор','6','8','3','40','200')
go



create view GetAllUsersOrders
(Номер_заказа, Товар, Тип_товара, Фамилия_клиента, Имя_клиента, Телефон_клиента, 
Сумма_заказа, Адрес_доставки, Дата_заказа, Статус_заказа, Код_выдачи, Логин_клиента)
as
		select Заказы.ID_Заказа, Товары.Наименование, Типы_Товаров.Наименование, 
		Клиенты.Фамилия, Клиенты.Имя, Клиенты.Телефон, Заказы.Сумма_заказа, Заказы.Адрес_доставки, 
		Заказы.Дата_заказа, Заказы.Статус_заказа, Заказы.Код_выдачи, Пользователи.Логин
		from Заказы_клиентов inner join Заказы on Заказы_клиентов.Заказ = Заказы.ID_Заказа
							 inner join Товары on Заказы.Товар = Товары.ID_Товара
							 inner join Типы_Товаров on Товары.Тип_Товара = Типы_Товаров.ID_Типа
							 inner join Клиенты on Заказы_клиентов.Клиент = Клиенты.ID_Клиента
							 inner join Пользователи on Клиенты.Данные_для_входа = Пользователи.ID_Пользователя
go

create view GetAllProds
(Номер_товара, Наименование, Тип_товара, Длина_см, Ширина_см, Высота_см, Стоимость)
as
	select Товары.ID_Товара, Товары.Наименование, Типы_Товаров.Наименование, Товары.Длина_см, 
	Товары.Ширина_см, Товары.Высота_см, Товары.Стоимость
	from Товары inner join Типы_Товаров on Товары.Тип_Товара = Типы_Товаров.ID_Типа
go

create view GetAllEmployees
(Фамилия, Имя, Отчество, Телефон, Роль, Логин, Пароль, Секретный_ключ)
as
	select Сотрудники.Фамилия, Сотрудники.Имя, Сотрудники.Отчество, Сотрудники.Телефон, 
	Роли_Пользователей.Наименование, Пользователи.Логин, Пользователи.Пароль, Пользователи.Ключ
	from Сотрудники inner join Пользователи on Сотрудники.Данные_для_входа = Пользователи.ID_Пользователя
					inner join Роли_Пользователей on Роли_Пользователей.ID_Роли = Пользователи.Роль
go

create view GetAllShipments
(Номер_поставки, Поставщик, Товар, Количество, Дата_поставки)
as
select Поставки.ID_Поставки, Поставщики.Название_компании, Товары.Наименование, Товары_в_поставках.Количество, Поставки.Дата_поставки
from Товары_в_поставках inner join Поставки on Товары_в_поставках.Поставка = Поставки.ID_Поставки
						inner join Поставщики on Поставки.Поставщик = Поставщики.ID_Поставщика
						inner join Товары on Товары_в_поставках.Товар = Товары.ID_Товара
go

create trigger ValidShipmentDateChecker
on Поставки
for insert
as
	declare @id int = (select ID_Поставки from inserted)
	declare @date date = (select Дата_поставки from inserted)
	begin
		if (@date > GETDATE())
			begin
				rollback transaction
				raiserror('Дата поставки не может быть больше сегодняшней!',0,1)
			end
	end
go

create trigger ValidOrderDelete
on Заказы
for delete
as
	declare @id int = (select ID_Заказа from deleted)
		begin
			if exists (select ID_Заказа from Заказы where ID_Заказа = @id)
				begin
					delete from Заказы where ID_Заказа = @id
				end
			else
				begin
					rollback transaction 
					raiserror('Заказа с таким номером не существует! Удаление невозможно!',0,1)
				end
		end
go

create view GetAllClients
(Номер_клиента, Фамилия, Имя, Телефон, Логин, Пароль, Секретный_ключ)
as
	select Клиенты.ID_Клиента, Клиенты.Фамилия, Клиенты.Имя, Клиенты.Телефон, Пользователи.Логин, Пользователи.Пароль, Пользователи.Ключ
	from Клиенты inner join Пользователи on Клиенты.Данные_для_входа = Пользователи.ID_Пользователя
go

create trigger OrderNumberChecker
on Заказы
for update
as
	declare @id int = (select ID_Заказа from inserted)
	declare @status varchar(10) = (select Статус_заказа from inserted)
	begin
		if exists (select ID_Заказа from Заказы where ID_Заказа = @id)
			begin
				update Заказы
				set Статус_заказа = @status
				where ID_Заказа = @id
			end
		else 
			begin
				rollback transaction
				raiserror('Данного заказа не существует!',0,1)
			end
	end
go

create table Поставщики
(
ID_Поставщика int primary key identity,
Название_компании varchar(50) unique not null,
Адрес_компании varchar(255) not null,
Контактное_лицо int foreign key references Представители_поставщиков(ID_Представителя) not null
)
go

insert into Поставщики (Название_компании, Адрес_компании)
values	('Florist.ru','Омск, Герцена-158А'),
		('Руспласт','Омск, Ивановская-98Б, Цех №14'),
		('Букетная галерея','Омск, Ленина-213'),
		('Земельные просторы','Новосибирск, Пушкинская-52Г'),
		('SeedsGrow','Новосибирск, Старый-арбат-74')
go

create table Поставки
(
ID_Поставки int primary key identity,
Поставщик int foreign key references Поставщики(ID_Поставщика) not null,
Дата_поставки date not null
)
go

insert into Поставки(Поставщик, Дата_поставки)
values	('1','2021-02-01'),
		('2','2021-02-03'),
		('1','2021-02-05'),
		('1','2021-02-06'),
		('2','2021-02-06'),
		('3','2021-02-06'),
		('3','2021-02-10'),
		('4','2021-02-10'),
		('4','2021-02-11'),
		('3','2021-02-15'),
		('3','2021-02-17'),
		('5','2021-02-15'),
		('5','2021-02-17'),
		('5','2021-02-19'),
		('1','2021-02-19'),
		('3','2021-02-20')
go

create table Товары_в_поставках
(
ID_Записи int primary key identity,
Поставка int foreign key references Поставки(ID_Поставки) not null,
Товар int foreign key references Товары(ID_Товара) not null,
Количество int not null
)
go

insert into Товары_в_поставках(Поставка, Товар, Количество)
values	('1','1','5'),
		('1','2','4'),
		('1','3','2'),
		('1','4','6'),
		('2','5','8'),
		('2','6','9'),
		('2','7','11'),
		('3','8','12'),
		('3','9','5'),
		('3','10','6'),
		('3','11','9'),
		('3','12','7'),
		('4','13','5'),
		('4','14','6'),
		('5','15','64'),
		('6','15','8'),
		('7','16','7'),
		('7','17','11'),
		('7','18','16'),
		('8','19','19'),
		('8','20','24'),
		('8','21','54'),
		('8','22','32'),
		('9','23','16'),
		('10','24','24'),
		('10','24','35'),
		('11','12','56'),
		('11','12','35'),
		('11','15','23'),
		('11','16','4'),
		('11','15','2'),
		('12','22','5'),
		('12','29','9'),
		('12','30','4'),
		('13','21','65'),
		('14','23','3'),
		('15','12','25'),
		('15','14','36')
go

create table Роли_Пользователей
(
ID_Роли int primary key identity,
Наименование varchar(25) unique not null 
)
go

insert into Роли_Пользователей
values	('Пользователь'),
		('Кассир'),
		('Администратор')
go

create table Пользователи
(
ID_Пользователя int primary key identity,
Логин varchar(25) unique not null,
Пароль varchar(25) not null,
Роль int foreign key references Роли_Пользователей(ID_Роли) not null,
Ключ varchar(10) not null
)
go

insert into Пользователи(Логин, Пароль, Роль)
values	('customer','customer','1'),
		('cashier','cashier','2'),
		('administrator','adminadministrator','3')
go

insert into Пользователи(Логин, Пароль, Роль)
values	('cash1','cash1','2'),
		('admin1','admin1','3')

go

create table Сотрудники
(
ID_Сотрудника int primary key identity,
Фамилия varchar(25) not null, 
Имя varchar(25) not null, 
Отчество varchar(25) not null, 
Телефон varchar(25) not null,
Данные_для_входа int foreign key references Пользователи(ID_Пользователя) not null
)
go

insert into Сотрудники(Фамилия, Имя, Отчество, Телефон, Данные_для_входа)
values	
		('Терницкая','Анастасия','Вячеславовна','+7 923 450 90 62','2'),
		('Прокопчук','Тимофей','Иванович','+7 950 550 41 29','4'),
		('Чудаев','Александр','Петрович','+7 983 601 90 50','3'),
		('Руденко','Дмитрий','Андреевич','+7 923 887 54 74','5')
go		
DBCC CHECKIDENT (Сотрудники, RESEED,0)
go
create table Клиенты
(
ID_Клиента int primary key identity,
Фамилия varchar(25) not null,
Имя varchar(25) not null,
Телефон varchar(25) not null,
Данные_для_входа int foreign key references Пользователи(ID_Пользователя) not null
)
go

insert into Клиенты(Фамилия, Имя, Телефон, Данные_для_входа)
values	('Генш','Данил','+7 973 187 71 92','1')
go

create table Заказы
(
ID_Заказа int primary key identity,
Товар int foreign key references Товары(ID_Товара) not null,
Количество int not null,
Способ_доставки varchar(30) not null,
Способ_оплаты varchar(30) not null,
Адрес_доставки varchar(150) not null,
Дата_заказа date not null,
Сумма_заказа money not null
)
go

create table Заказы_клиентов
(
ID_Записи int primary key identity,
Заказ int foreign key references Заказы(ID_Заказа) not null,
Клиент int foreign key references Клиенты(ID_Клиента) not null
)
go